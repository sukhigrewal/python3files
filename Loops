#ex1
def divisible_by_ten(nums):
  count = 0
  for num in nums:
    if (num % 10 == 0):
      count += 1
  return count
#test
print(divisible_by_ten([20, 25, 30, 35, 40]))

#ex2
def add_greetings(names):
  greetings = []
  for name in names:
    add = "Hello, " + name
    greetings.append(add)
  return greetings
#test  
print(add_greetings(["Owen", "Max", "Sophie"]))

#ex3
def delete_starting_evens(lst):
  while (len(lst) > 0 and lst[0] % 2 == 0):
    lst = lst[1:]
  return lst
#test
print(delete_starting_evens([4, 8, 10, 11, 12, 15]))
print(delete_starting_evens([4, 8, 10]))

#ex4
def odd_nums(lst):
  empty_list = []
  for element in lst:
    if element % 2 != 0:
      empty_list.append(element)
  return empty_list
#test
print(odd_nums([4, 3, 7, 10, 11, -2]))

#ex5
def odd_indices(lst):
  new_lst = []
  for index in range(1, len(lst), 2):
    new_lst.append(lst[index])
  return new_lst
#test
print(odd_indices([4, 3, 7, 10, 11, -2]))

#ex6
def larger_sum(lst1, lst2):
  sum1 = 0
  sum2 = 0
  for num in lst1:
    sum1 = sum1 + num
  for num2 in lst2:
    sum2 = sum2 + num2
  if sum1 >= sum2: 
    return lst1
  else:
    return lst2
#test
print(larger_sum([1, 9, 5], [2, 3, 11]))

#same as above
def larger_sum(lst1, lst2):
  sum1 = 0
  sum2 = 0
  for number in lst1:
    sum1 += number
  for number in lst2:
    sum2 += number
  if sum1 >= sum2:
    return lst1
  else: 
    return lst2
#test
print(larger_sum([1, 9, 5], [2, 3, 7]))

#ex
def over_nine_thousand(lst):
  sum = 0
  for number in lst:
    sum += number
    if (sum > 9000):
      break
  return sum
#test
print(over_nine_thousand([8000, 900, 120, 5000]))

#ex
def max_num(nums):
  maximum = nums[0]
  for num in nums:
    if num > maximum:
      maximum = num
  return maximum
#test
print(max_num([50, -10, 0, 75, 20]))

#ex
def same_values(lst1, lst2):
  new_lst = []
  for index in range(len(lst1)):
    if lst1[index] == lst2[index]:
      new_lst.append(index)
  return new_lst
#test
print(same_values([5, 1, -10, 3, 3], [5, 10, -10, 3, 5]))

#ex
def reversed_list(lst1, lst2):
  for index in range(len(lst1)):
    if lst1[index] != lst2[len(lst2) - 1 - index]:
      return False
  return True
#test
print(reversed_list([1, 2, 3], [3, 2, 1]))
print(reversed_list([1, 5, 3], [3, 2, 1]))
